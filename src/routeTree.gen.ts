/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedPublicImport } from './routes/_authenticated/_public'
import { Route as AuthenticatedPublicViewexpensesImport } from './routes/_authenticated/_public/view_expenses'
import { Route as AuthenticatedPublicHomeImport } from './routes/_authenticated/_public/home'
import { Route as AuthenticatedPublicAddexpensesImport } from './routes/_authenticated/_public/add_expenses'

// Create/Update Routes

const AuthenticatedPublicRoute = AuthenticatedPublicImport.update({
  id: '/_authenticated/_public',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedPublicViewexpensesRoute =
  AuthenticatedPublicViewexpensesImport.update({
    id: '/view_expenses',
    path: '/view_expenses',
    getParentRoute: () => AuthenticatedPublicRoute,
  } as any)

const AuthenticatedPublicHomeRoute = AuthenticatedPublicHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AuthenticatedPublicRoute,
} as any)

const AuthenticatedPublicAddexpensesRoute =
  AuthenticatedPublicAddexpensesImport.update({
    id: '/add_expenses',
    path: '/add_expenses',
    getParentRoute: () => AuthenticatedPublicRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated/_public': {
      id: '/_authenticated/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedPublicImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_public/add_expenses': {
      id: '/_authenticated/_public/add_expenses'
      path: '/add_expenses'
      fullPath: '/add_expenses'
      preLoaderRoute: typeof AuthenticatedPublicAddexpensesImport
      parentRoute: typeof AuthenticatedPublicImport
    }
    '/_authenticated/_public/home': {
      id: '/_authenticated/_public/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthenticatedPublicHomeImport
      parentRoute: typeof AuthenticatedPublicImport
    }
    '/_authenticated/_public/view_expenses': {
      id: '/_authenticated/_public/view_expenses'
      path: '/view_expenses'
      fullPath: '/view_expenses'
      preLoaderRoute: typeof AuthenticatedPublicViewexpensesImport
      parentRoute: typeof AuthenticatedPublicImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedPublicRouteChildren {
  AuthenticatedPublicAddexpensesRoute: typeof AuthenticatedPublicAddexpensesRoute
  AuthenticatedPublicHomeRoute: typeof AuthenticatedPublicHomeRoute
  AuthenticatedPublicViewexpensesRoute: typeof AuthenticatedPublicViewexpensesRoute
}

const AuthenticatedPublicRouteChildren: AuthenticatedPublicRouteChildren = {
  AuthenticatedPublicAddexpensesRoute: AuthenticatedPublicAddexpensesRoute,
  AuthenticatedPublicHomeRoute: AuthenticatedPublicHomeRoute,
  AuthenticatedPublicViewexpensesRoute: AuthenticatedPublicViewexpensesRoute,
}

const AuthenticatedPublicRouteWithChildren =
  AuthenticatedPublicRoute._addFileChildren(AuthenticatedPublicRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedPublicRouteWithChildren
  '/add_expenses': typeof AuthenticatedPublicAddexpensesRoute
  '/home': typeof AuthenticatedPublicHomeRoute
  '/view_expenses': typeof AuthenticatedPublicViewexpensesRoute
}

export interface FileRoutesByTo {
  '': typeof AuthenticatedPublicRouteWithChildren
  '/add_expenses': typeof AuthenticatedPublicAddexpensesRoute
  '/home': typeof AuthenticatedPublicHomeRoute
  '/view_expenses': typeof AuthenticatedPublicViewexpensesRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated/_public': typeof AuthenticatedPublicRouteWithChildren
  '/_authenticated/_public/add_expenses': typeof AuthenticatedPublicAddexpensesRoute
  '/_authenticated/_public/home': typeof AuthenticatedPublicHomeRoute
  '/_authenticated/_public/view_expenses': typeof AuthenticatedPublicViewexpensesRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/add_expenses' | '/home' | '/view_expenses'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/add_expenses' | '/home' | '/view_expenses'
  id:
    | '__root__'
    | '/_authenticated/_public'
    | '/_authenticated/_public/add_expenses'
    | '/_authenticated/_public/home'
    | '/_authenticated/_public/view_expenses'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedPublicRoute: typeof AuthenticatedPublicRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedPublicRoute: AuthenticatedPublicRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated/_public"
      ]
    },
    "/_authenticated/_public": {
      "filePath": "_authenticated/_public.tsx",
      "children": [
        "/_authenticated/_public/add_expenses",
        "/_authenticated/_public/home",
        "/_authenticated/_public/view_expenses"
      ]
    },
    "/_authenticated/_public/add_expenses": {
      "filePath": "_authenticated/_public/add_expenses.tsx",
      "parent": "/_authenticated/_public"
    },
    "/_authenticated/_public/home": {
      "filePath": "_authenticated/_public/home.tsx",
      "parent": "/_authenticated/_public"
    },
    "/_authenticated/_public/view_expenses": {
      "filePath": "_authenticated/_public/view_expenses.tsx",
      "parent": "/_authenticated/_public"
    }
  }
}
ROUTE_MANIFEST_END */
